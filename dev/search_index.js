var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = OntologyMapping","category":"page"},{"location":"#OntologyMapping","page":"Home","title":"OntologyMapping","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OntologyMapping.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [OntologyMapping]","category":"page"},{"location":"#OntologyMapping.get_ontology_mapping-Tuple{Vector{String}, String}","page":"Home","title":"OntologyMapping.get_ontology_mapping","text":"get_ontology_mapping(to_map_ids::Vector{String}, ontology::String;\n                     field::Symbol=:short_form)\n\nGet a mapping of cell types to an ontology. This performs a search for each cell type in the ontology and returns the mapping.                         \n\n\n\n\n\n","category":"method"},{"location":"#OntologyMapping.map_to_ontology-Union{Tuple{K}, Tuple{ExpressionData.ExpressionSet, String}} where K","page":"Home","title":"OntologyMapping.map_to_ontology","text":"map_to_ontology(eset::ExpressionSet, ontology::String;\n                ontology_col::String,\n                target_col::String=\"ontology_ids\",\n                replacements::NTuple{K,Pair{String,String}}) where {K}\n\nMaps cell types in an ExpressionSet to a specified ontology and adds the mapping to the ExpressionSet.\n\nArguments\n\neset::ExpressionSet: The expression set containing the data to be mapped.\nontology::String: The ontology to map the cell types to.\nontology_col::String: The column in the phenotype data that contains the cell types to be mapped.\ntarget_col::String=\"ontology_ids\": The column name where the ontology IDs will be stored in the phenotype data. Defaults to \"ontology_ids\".\nreplacements::NTuple{K,Pair{String,String}}: A tuple of string pairs for replacing substrings in the cell types to improve mapping accuracy.\n\n\n\n\n\n","category":"method"}]
}
